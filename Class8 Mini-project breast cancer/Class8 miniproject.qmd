---
title: "Shen Class8 Mini Project"
format: html
author: "Celina Shen (PID: A16673724)"
---

## Breast Cancer FNA Data

### Exploratory data analysis

```{r}
#Load the data and delete diagnosis column.
wisc.df <- read.csv("WisconsinCancer.csv", row.names = 1)
wisc.data <- wisc.df[,-1]
diagnosis <- as.factor(wisc.df[,1])

#Print new data tables.
head(wisc.df)
head(wisc.data)
head(diagnosis)

#Gather information to answer Q1, Q2, Q3.
nrow(wisc.df)
table(wisc.df$diagnosis)
length(grep("_mean", colnames(wisc.df)))
```

Q1: There are 569 observations in the dataset.

Q2: There are 212 malignant diagnoses.

Q3: There are 10 features in the data suffixed with _mean.

### Principal Component Analysis

```{r}
# Check column means and standard deviations
colMeans(wisc.data)

apply(wisc.data,2,sd)

# PCA of wisc.data
wisc.pr <- prcomp(wisc.data, scale = TRUE)

# Look at summary of results
summary(wisc.pr)
x <- summary(wisc.pr)
```

Q4: 44.27% of the original variance is captured by the first principal component.

Q5: 3 PCs are required to describe at least 70% of the original variance in the data.

Q6: 7 PCs are required to describe at least 90% of the original variance in the data.

```{r}
biplot(wisc.pr)
```

Q7: This graph stands out because it is extremely messy and dense. It is difficult to understand because of the quantity of data.

```{r}
# Scatter plot using principal components 1 and 2
plot(wisc.pr$x, col = diagnosis, 
     xlab = "PC1", ylab = "PC2")
```

```{r}
plot( wisc.pr$x[,c(1,3)], col = diagnosis , 
     xlab = "PC1", ylab = "PC3")
```

Q8: The shape of the plots of PC2 vs PC1 and PC3 vs PC1 are similar. PC3 has a more limited spread along the y-axis compared to PC2.

```{r}
# Create a data.frame for ggplot
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis

# Load the ggplot2 package
library(ggplot2)

# Make a scatter plot colored by diagnosis
ggplot(df) + 
  aes(PC1, PC2, col= diagnosis) + 
  geom_point()
```

### Variance

```{r}
# Calculate variance of each component
pr.var <- wisc.pr$sdev^2
head(pr.var)

# Variance explained by each principal component: pve
pve <- pr.var / sum(pr.var)

# Plot variance explained for each principal component
plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")
```

```{r}
# Alternative scree plot of the same data, note data driven y-axis
barplot(pve, ylab = "Precent of Variance Explained",
     names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )
wisc.pr$rotation[,1]
```

Q9: The concave points mean of the loading vector is -0.26085376. This value shows how related the original data is to the PC values.

## Hierarchical Clustering

```{r}
# Scale the wisc.data data using the "scale()" function
data.scaled <- scale(wisc.data)

data.dist <- dist(data.scaled)
```

```{r}
wisc.hclust <- hclust(data.dist, method = "complete")
plot(wisc.hclust)
abline(h=19, col="red", lty=2)
```

Q10: At height 19 and at height 20, the model has 4 clusters.

```{r}
wisc.hclust.clusters <- cutree(wisc.hclust, k=4)
table(wisc.hclust.clusters, diagnosis)
```

Q12: I prefer the "single" method for clustering because it forms larger clusters that more accurately differentiates between benign and malignant data.

```{r}
wisc.pr.hclust <- hclust(dist(wisc.pr$x[,1:7]), method = "ward.D2")

grps <- cutree(wisc.pr.hclust, k=2)
table(grps)
table(grps, diagnosis)

plot(wisc.pr$x[,1:2], col=grps)
plot(wisc.pr$x[,1:2], col=diagnosis)

g <- as.factor(grps)
levels(g)

g <- as.factor(grps)
levels(g)

g <- relevel(g,2)
levels(g)

# Plot using our re-ordered factor 
plot(wisc.pr$x[,1:2], col=g)

wisc.pr.hclust.clusters <- cutree(wisc.pr.hclust, k=2)
table(wisc.pr.hclust.clusters, diagnosis)
table(wisc.hclust.clusters, diagnosis)
```

Q13: The newly created model produces counts of benign and malignant tumors similar to the numbers from the actual diagnoses.



